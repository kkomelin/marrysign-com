/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MarrySign, MarrySignInterface } from "../MarrySign";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "AgreementNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "BobNotSpecified",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerIsNotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyContent",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTimestamp",
    type: "error",
  },
  {
    inputs: [],
    name: "MustPayExactFee",
    type: "error",
  },
  {
    inputs: [],
    name: "MustPayExactTerminationCost",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroTerminationCost",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "AgreementAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "AgreementCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "AgreementRefused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "AgreementTerminated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "acceptedAt",
        type: "uint256",
      },
    ],
    name: "acceptAgreement",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bob",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "content",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "terminationCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
    ],
    name: "createAgreement",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAcceptedAgreementCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAcceptedAgreements",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "alice",
            type: "address",
          },
          {
            internalType: "address",
            name: "bob",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "content",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "terminationCost",
            type: "uint256",
          },
          {
            internalType: "enum MarrySign.AgreementState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct MarrySign.Agreement[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "getAgreement",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "alice",
            type: "address",
          },
          {
            internalType: "address",
            name: "bob",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "content",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "terminationCost",
            type: "uint256",
          },
          {
            internalType: "enum MarrySign.AgreementState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct MarrySign.Agreement",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "partnerAddress",
        type: "address",
      },
    ],
    name: "getAgreementByAddress",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "alice",
            type: "address",
          },
          {
            internalType: "address",
            name: "bob",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "content",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "terminationCost",
            type: "uint256",
          },
          {
            internalType: "enum MarrySign.AgreementState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct MarrySign.Agreement",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAgreementCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pageNum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_resultsPerPage",
        type: "uint256",
      },
    ],
    name: "getPaginatedAgreements",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "alice",
            type: "address",
          },
          {
            internalType: "address",
            name: "bob",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "content",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "terminationCost",
            type: "uint256",
          },
          {
            internalType: "enum MarrySign.AgreementState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct MarrySign.Agreement[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "refusedAt",
        type: "uint256",
      },
    ],
    name: "refuseAgreement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "terminateAgreement",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000600155336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612ab4806100586000396000f3fe6080604052600436106100c15760003560e01c806396e8bc231161007f578063ced72f8711610059578063ced72f8714610225578063e6dc3d1b14610250578063f42eb7651461026c578063f7d0c196146102a9576100c1565b806396e8bc23146101c4578063bb46fb35146101ed578063c9d51dd014610209576100c1565b80628bed3e146100c65780632e22d36c146100f15780633ccfd60b1461011c5780634c649eac1461013357806369fe0e2d1461015e57806391a5caaf14610187575b600080fd5b3480156100d257600080fd5b506100db6102e6565b6040516100e89190611e87565b60405180910390f35b3480156100fd57600080fd5b506101066102f3565b6040516101139190611e87565b60405180910390f35b34801561012857600080fd5b50610131610394565b005b34801561013f57600080fd5b50610148610482565b6040516101559190612170565b60405180910390f35b34801561016a57600080fd5b50610185600480360381019061018091906121d2565b610767565b005b34801561019357600080fd5b506101ae60048036038101906101a9919061222b565b6107f6565b6040516101bb91906122f4565b60405180910390f35b3480156101d057600080fd5b506101eb60048036038101906101e69190612342565b610bde565b005b61020760048036038101906102029190612382565b610dad565b005b610223600480360381019061021e91906124e4565b6110d5565b005b34801561023157600080fd5b5061023a611506565b6040516102479190611e87565b60405180910390f35b61026a60048036038101906102659190612342565b611510565b005b34801561027857600080fd5b50610293600480360381019061028e9190612382565b611751565b6040516102a091906122f4565b60405180910390f35b3480156102b557600080fd5b506102d060048036038101906102cb9190612567565b611a08565b6040516102dd9190612170565b60405180910390f35b6000600280549050905090565b6000806000905060005b6103056102e6565b81101561038c57600160038111156103205761031f611fc7565b5b60028281548110610334576103336125a7565b5b906000526020600020906007020160050160009054906101000a900460ff16600381111561036557610364611fc7565b5b0361037957818061037590612605565b9250505b808061038490612605565b9150506102fd565b508091505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610419576040517f6db2465f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561047f573d6000803e3d6000fd5b50565b6060600061048e6102f3565b905060008167ffffffffffffffff8111156104ac576104ab6123b9565b5b6040519080825280602002602001820160405280156104e557816020015b6104d2611d93565b8152602001906001900390816104ca5790505b5090506000805b6104f46102e6565b81101561075d576001600381111561050f5761050e611fc7565b5b60028281548110610523576105226125a7565b5b906000526020600020906007020160050160009054906101000a900460ff16600381111561055457610553611fc7565b5b0361074a576002818154811061056d5761056c6125a7565b5b90600052602060002090600702016040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201805461064c9061267c565b80601f01602080910402602001604051908101604052809291908181526020018280546106789061267c565b80156106c55780601f1061069a576101008083540402835291602001916106c5565b820191906000526020600020905b8154815290600101906020018083116106a857829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff1660038111156106fd576106fc611fc7565b5b600381111561070f5761070e611fc7565b5b81526020016006820154815250508383815181106107305761072f6125a7565b5b6020026020010181905250818061074690612605565b9250505b808061075590612605565b9150506104ec565b5081935050505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107ec576040517f6db2465f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060018190555050565b6107fe611d93565b60005b6108096102e6565b811015610ba6576000600381111561082457610823611fc7565b5b60028281548110610838576108376125a7565b5b906000526020600020906007020160050160009054906101000a900460ff16600381111561086957610868611fc7565b5b141580156108ce57506001600381111561088657610885611fc7565b5b6002828154811061089a576108996125a7565b5b906000526020600020906007020160050160009054906101000a900460ff1660038111156108cb576108ca611fc7565b5b14155b610b93578273ffffffffffffffffffffffffffffffffffffffff16600282815481106108fd576108fc6125a7565b5b906000526020600020906007020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806109c157508273ffffffffffffffffffffffffffffffffffffffff1660028281548110610977576109766125a7565b5b906000526020600020906007020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15610b9257600281815481106109da576109d96125a7565b5b90600052602060002090600702016040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382018054610ab99061267c565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae59061267c565b8015610b325780601f10610b0757610100808354040283529160200191610b32565b820191906000526020600020905b815481529060010190602001808311610b1557829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff166003811115610b6a57610b69611fc7565b5b6003811115610b7c57610b7b611fc7565b5b8152602001600682015481525050915050610bd9565b5b8080610b9e90612605565b915050610801565b506040517f9cc59cb900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b8060008103610c19576040517fb7d0949700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610c2484611751565b90503373ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff1614158015610c9657503373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff1614155b15610ccd576040517f4ca8886700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280600360008781526020019081526020016000206000015481548110610cf857610cf76125a7565b5b906000526020600020906007020160050160006101000a81548160ff02191690836003811115610d2b57610d2a611fc7565b5b0217905550826002600360008781526020019081526020016000206000015481548110610d5b57610d5a6125a7565b5b9060005260206000209060070201600601819055507f4a837c520d9f368aaaea13ebb5a574227512de5e0ef1c6829f0cff5a18fef14e84604051610d9f91906126bc565b60405180910390a150505050565b6000610db882611751565b90503373ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff1614158015610e2a57503373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff1614155b15610e61576040517f4ca8886700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80608001513414610e9e576040517f9602d60700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff1603610f2557806040015173ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610f1f573d6000803e3d6000fd5b50610f71565b806020015173ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610f6f573d6000803e3d6000fd5b505b6002600360008481526020019081526020016000206000015481548110610f9b57610f9a6125a7565b5b90600052602060002090600702016000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556003820160006110109190611e11565b60048201600090556005820160006101000a81549060ff02191690556006820160009055505060036002600360008581526020019081526020016000206000015481548110611062576110616125a7565b5b906000526020600020906007020160050160006101000a81548160ff0219169083600381111561109557611094611fc7565b5b02179055507f864ab0fdbebe5acbec63517700b9f4e0d9e6e952430476e55c9da20e56eb1753826040516110c991906126bc565b60405180910390a15050565b8060008103611110576040517fb7d0949700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600084510361114b576040517f68b3703600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036111b1576040517fd62e497b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083036111eb576040517ff6d5173800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001543414611226576040517fd0ae82f300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001541461129a5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f19350505050158015611298573d6000803e3d6000fd5b505b600460008154809291906112ad90612605565b919050555060006112c333878787600454611d52565b905060006040518060e001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff168152602001878152602001868152602001600060038111156113305761132f611fc7565b5b815260200185815250905060028190806001815401808255809150506001900390600052602060002090600702016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030190816114149190612883565b506080820151816004015560a08201518160050160006101000a81548160ff0219169083600381111561144a57611449611fc7565b5b021790555060c082015181600601555050604051806040016040528060016114706102e6565b61147a9190612955565b815260200160011515815250600360008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff0219169083151502179055509050507f3bedf7bdc9c1b6038d7e908abea9040f7de2f70dc0270a8de9413d06ed0eb7a5826040516114f591906126bc565b60405180910390a150505050505050565b6000600154905090565b806000810361154b576040517fb7d0949700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061155684611751565b9050806040015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146115c1576040517f4ca8886700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015434146115fc576040517fd0ae82f300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600154146116705760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f1935050505015801561166e573d6000803e3d6000fd5b505b6001600260036000878152602001908152602001600020600001548154811061169c5761169b6125a7565b5b906000526020600020906007020160050160006101000a81548160ff021916908360038111156116cf576116ce611fc7565b5b02179055508260026003600087815260200190815260200160002060000154815481106116ff576116fe6125a7565b5b9060005260206000209060070201600601819055507f903359345f2970df3da926dea9c27556b1fa2eceefca9e1078e1ec12c0b1b6b18460405161174391906126bc565b60405180910390a150505050565b611759611d93565b6003600083815260200190815260200160002060010160009054906101000a900460ff166117b3576040517f9cc59cb900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060026003600085815260200190815260200160002060000154815481106117df576117de6125a7565b5b906000526020600020905050602060ff1603611827576040517f9cc59cb900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600360008481526020019081526020016000206000015481548110611851576118506125a7565b5b90600052602060002090600702016040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820180546119309061267c565b80601f016020809104026020016040519081016040528092919081815260200182805461195c9061267c565b80156119a95780601f1061197e576101008083540402835291602001916119a9565b820191906000526020600020905b81548152906001019060200180831161198c57829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff1660038111156119e1576119e0611fc7565b5b60038111156119f3576119f2611fc7565b5b81526020016006820154815250509050919050565b60606000828484611a199190612989565b611a239190612955565b905060006002805490501480611a4957506001600280549050611a469190612955565b81115b15611aab57600067ffffffffffffffff811115611a6957611a686123b9565b5b604051908082528060200260200182016040528015611aa257816020015b611a8f611d93565b815260200190600190039081611a875790505b50915050611d4c565b60008367ffffffffffffffff811115611ac757611ac66123b9565b5b604051908082528060200260200182016040528015611b0057816020015b611aed611d93565b815260200190600190039081611ae55790505b50905060005b8585611b129190612989565b831015611d45576001600280549050611b2b9190612955565b831015611d195760028381548110611b4657611b456125a7565b5b90600052602060002090600702016040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382018054611c259061267c565b80601f0160208091040260200160405190810160405280929190818152602001828054611c519061267c565b8015611c9e5780601f10611c7357610100808354040283529160200191611c9e565b820191906000526020600020905b815481529060010190602001808311611c8157829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff166003811115611cd657611cd5611fc7565b5b6003811115611ce857611ce7611fc7565b5b8152602001600682015481525050828281518110611d0957611d086125a7565b5b6020026020010181905250611d24565b819350505050611d4c565b8080611d2f90612605565b9150508280611d3d90612605565b935050611b06565b8193505050505b92915050565b6000808686868686604051602001611d6e959493929190612a24565b6040516020818303038152906040529050808051906020012091505095945050505050565b6040518060e0016040528060008019168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016000815260200160006003811115611e0457611e03611fc7565b5b8152602001600081525090565b508054611e1d9061267c565b6000825580601f10611e2f5750611e4e565b601f016020900490600052602060002090810190611e4d9190611e51565b5b50565b5b80821115611e6a576000816000905550600101611e52565b5090565b6000819050919050565b611e8181611e6e565b82525050565b6000602082019050611e9c6000830184611e78565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b611ee181611ece565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f1282611ee7565b9050919050565b611f2281611f07565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611f62578082015181840152602081019050611f47565b60008484015250505050565b6000601f19601f8301169050919050565b6000611f8a82611f28565b611f948185611f33565b9350611fa4818560208601611f44565b611fad81611f6e565b840191505092915050565b611fc181611e6e565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061200757612006611fc7565b5b50565b600081905061201882611ff6565b919050565b60006120288261200a565b9050919050565b6120388161201d565b82525050565b600060e0830160008301516120566000860182611ed8565b5060208301516120696020860182611f19565b50604083015161207c6040860182611f19565b50606083015184820360608601526120948282611f7f565b91505060808301516120a96080860182611fb8565b5060a08301516120bc60a086018261202f565b5060c08301516120cf60c0860182611fb8565b508091505092915050565b60006120e6838361203e565b905092915050565b6000602082019050919050565b600061210682611ea2565b6121108185611ead565b93508360208202850161212285611ebe565b8060005b8581101561215e578484038952815161213f85826120da565b945061214a836120ee565b925060208a01995050600181019050612126565b50829750879550505050505092915050565b6000602082019050818103600083015261218a81846120fb565b905092915050565b6000604051905090565b600080fd5b600080fd5b6121af81611e6e565b81146121ba57600080fd5b50565b6000813590506121cc816121a6565b92915050565b6000602082840312156121e8576121e761219c565b5b60006121f6848285016121bd565b91505092915050565b61220881611f07565b811461221357600080fd5b50565b600081359050612225816121ff565b92915050565b6000602082840312156122415761224061219c565b5b600061224f84828501612216565b91505092915050565b600060e0830160008301516122706000860182611ed8565b5060208301516122836020860182611f19565b5060408301516122966040860182611f19565b50606083015184820360608601526122ae8282611f7f565b91505060808301516122c36080860182611fb8565b5060a08301516122d660a086018261202f565b5060c08301516122e960c0860182611fb8565b508091505092915050565b6000602082019050818103600083015261230e8184612258565b905092915050565b61231f81611ece565b811461232a57600080fd5b50565b60008135905061233c81612316565b92915050565b600080604083850312156123595761235861219c565b5b60006123678582860161232d565b9250506020612378858286016121bd565b9150509250929050565b6000602082840312156123985761239761219c565b5b60006123a68482850161232d565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6123f182611f6e565b810181811067ffffffffffffffff821117156124105761240f6123b9565b5b80604052505050565b6000612423612192565b905061242f82826123e8565b919050565b600067ffffffffffffffff82111561244f5761244e6123b9565b5b61245882611f6e565b9050602081019050919050565b82818337600083830152505050565b600061248761248284612434565b612419565b9050828152602081018484840111156124a3576124a26123b4565b5b6124ae848285612465565b509392505050565b600082601f8301126124cb576124ca6123af565b5b81356124db848260208601612474565b91505092915050565b600080600080608085870312156124fe576124fd61219c565b5b600061250c87828801612216565b945050602085013567ffffffffffffffff81111561252d5761252c6121a1565b5b612539878288016124b6565b935050604061254a878288016121bd565b925050606061255b878288016121bd565b91505092959194509250565b6000806040838503121561257e5761257d61219c565b5b600061258c858286016121bd565b925050602061259d858286016121bd565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061261082611e6e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612642576126416125d6565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061269457607f821691505b6020821081036126a7576126a661264d565b5b50919050565b6126b681611ece565b82525050565b60006020820190506126d160008301846126ad565b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026127397fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826126fc565b61274386836126fc565b95508019841693508086168417925050509392505050565b6000819050919050565b600061278061277b61277684611e6e565b61275b565b611e6e565b9050919050565b6000819050919050565b61279a83612765565b6127ae6127a682612787565b848454612709565b825550505050565b600090565b6127c36127b6565b6127ce818484612791565b505050565b5b818110156127f2576127e76000826127bb565b6001810190506127d4565b5050565b601f82111561283757612808816126d7565b612811846126ec565b81016020851015612820578190505b61283461282c856126ec565b8301826127d3565b50505b505050565b600082821c905092915050565b600061285a6000198460080261283c565b1980831691505092915050565b60006128738383612849565b9150826002028217905092915050565b61288c82611f28565b67ffffffffffffffff8111156128a5576128a46123b9565b5b6128af825461267c565b6128ba8282856127f6565b600060209050601f8311600181146128ed57600084156128db578287015190505b6128e58582612867565b86555061294d565b601f1984166128fb866126d7565b60005b82811015612923578489015182556001820191506020850194506020810190506128fe565b86831015612940578489015161293c601f891682612849565b8355505b6001600288020188555050505b505050505050565b600061296082611e6e565b915061296b83611e6e565b9250828203905081811115612983576129826125d6565b5b92915050565b600061299482611e6e565b915061299f83611e6e565b92508282026129ad81611e6e565b915082820484148315176129c4576129c36125d6565b5b5092915050565b6129d481611f07565b82525050565b600082825260208201905092915050565b60006129f682611f28565b612a0081856129da565b9350612a10818560208601611f44565b612a1981611f6e565b840191505092915050565b600060a082019050612a3960008301886129cb565b612a4660208301876129cb565b8181036040830152612a5881866129eb565b9050612a676060830185611e78565b612a746080830184611e78565b969550505050505056fea26469706673582212201d17ec7d02063591726a17599f8ce43286062b2fcd4b19b259a5962c4084375864736f6c63430008110033";

type MarrySignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarrySignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MarrySign__factory extends ContractFactory {
  constructor(...args: MarrySignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<MarrySign> {
    return super.deploy(overrides || {}) as Promise<MarrySign>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MarrySign {
    return super.attach(address) as MarrySign;
  }
  override connect(signer: Signer): MarrySign__factory {
    return super.connect(signer) as MarrySign__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarrySignInterface {
    return new utils.Interface(_abi) as MarrySignInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MarrySign {
    return new Contract(address, _abi, signerOrProvider) as MarrySign;
  }
}
