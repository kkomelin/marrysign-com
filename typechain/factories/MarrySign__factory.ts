/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MarrySign, MarrySignInterface } from "../MarrySign";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "AgreementNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "BobNotSpecified",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerIsNotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyContent",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTimestamp",
    type: "error",
  },
  {
    inputs: [],
    name: "MustPayExactTerminationCost",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroTerminationCost",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "AgreementAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "AgreementCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "AgreementRefused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "AgreementTerminated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "acceptedAt",
        type: "uint256",
      },
    ],
    name: "acceptAgreement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bob",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "content",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "terminationCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
    ],
    name: "createAgreement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAcceptedAgreements",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "alice",
            type: "address",
          },
          {
            internalType: "address",
            name: "bob",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "content",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "terminationCost",
            type: "uint256",
          },
          {
            internalType: "enum MarrySign.AgreementState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct MarrySign.Agreement[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "getAgreement",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "alice",
            type: "address",
          },
          {
            internalType: "address",
            name: "bob",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "content",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "terminationCost",
            type: "uint256",
          },
          {
            internalType: "enum MarrySign.AgreementState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct MarrySign.Agreement",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "partnerAddress",
        type: "address",
      },
    ],
    name: "getAgreementByAddress",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "alice",
            type: "address",
          },
          {
            internalType: "address",
            name: "bob",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "content",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "terminationCost",
            type: "uint256",
          },
          {
            internalType: "enum MarrySign.AgreementState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct MarrySign.Agreement",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAgreementCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "refusedAt",
        type: "uint256",
      },
    ],
    name: "refuseAgreement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "terminateAgreement",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612511806100536000396000f3fe6080604052600436106100855760003560e01c806396e8bc231161005957806396e8bc2314610134578063bb46fb351461015d578063c9d51dd014610179578063e6dc3d1b146101a2578063f42eb765146101cb57610085565b80628bed3e1461008a5780633ccfd60b146100b55780634c649eac146100cc57806391a5caaf146100f7575b600080fd5b34801561009657600080fd5b5061009f610208565b6040516100ac91906118f1565b60405180910390f35b3480156100c157600080fd5b506100ca610215565b005b3480156100d857600080fd5b506100e1610303565b6040516100ee9190611bda565b60405180910390f35b34801561010357600080fd5b5061011e60048036038101906101199190611c3c565b610670565b60405161012b9190611d05565b60405180910390f35b34801561014057600080fd5b5061015b60048036038101906101569190611d7f565b610a58565b005b61017760048036038101906101729190611dbf565b610c28565b005b34801561018557600080fd5b506101a0600480360381019061019b9190611f21565b610ff2565b005b3480156101ae57600080fd5b506101c960048036038101906101c49190611d7f565b611374565b005b3480156101d757600080fd5b506101f260048036038101906101ed9190611dbf565b611505565b6040516101ff9190611d05565b60405180910390f35b6000600180549050905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461029a576040517f6db2465f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610300573d6000803e3d6000fd5b50565b60606000805b610311610208565b811015610398576001600381111561032c5761032b611a31565b5b600182815481106103405761033f611fa4565b5b906000526020600020906007020160050160009054906101000a900460ff16600381111561037157610370611a31565b5b0361038557818061038190612002565b9250505b808061039090612002565b915050610309565b5060008167ffffffffffffffff8111156103b5576103b4611df6565b5b6040519080825280602002602001820160405280156103ee57816020015b6103db6117fd565b8152602001906001900390816103d35790505b5090506000805b6103fd610208565b811015610666576001600381111561041857610417611a31565b5b6001828154811061042c5761042b611fa4565b5b906000526020600020906007020160050160009054906101000a900460ff16600381111561045d5761045c611a31565b5b03610653576001818154811061047657610475611fa4565b5b90600052602060002090600702016040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201805461055590612079565b80601f016020809104026020016040519081016040528092919081815260200182805461058190612079565b80156105ce5780601f106105a3576101008083540402835291602001916105ce565b820191906000526020600020905b8154815290600101906020018083116105b157829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff16600381111561060657610605611a31565b5b600381111561061857610617611a31565b5b815260200160068201548152505083838151811061063957610638611fa4565b5b6020026020010181905250818061064f90612002565b9250505b808061065e90612002565b9150506103f5565b5081935050505090565b6106786117fd565b60005b610683610208565b811015610a20576000600381111561069e5761069d611a31565b5b600182815481106106b2576106b1611fa4565b5b906000526020600020906007020160050160009054906101000a900460ff1660038111156106e3576106e2611a31565b5b14158015610748575060016003811115610700576106ff611a31565b5b6001828154811061071457610713611fa4565b5b906000526020600020906007020160050160009054906101000a900460ff16600381111561074557610744611a31565b5b14155b610a0d578273ffffffffffffffffffffffffffffffffffffffff166001828154811061077757610776611fa4565b5b906000526020600020906007020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061083b57508273ffffffffffffffffffffffffffffffffffffffff16600182815481106107f1576107f0611fa4565b5b906000526020600020906007020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15610a0c576001818154811061085457610853611fa4565b5b90600052602060002090600702016040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201805461093390612079565b80601f016020809104026020016040519081016040528092919081815260200182805461095f90612079565b80156109ac5780601f10610981576101008083540402835291602001916109ac565b820191906000526020600020905b81548152906001019060200180831161098f57829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff1660038111156109e4576109e3611a31565b5b60038111156109f6576109f5611a31565b5b8152602001600682015481525050915050610a53565b5b8080610a1890612002565b91505061067b565b506040517f9cc59cb900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b8060008103610a93576040517fb7d0949700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610a9e84611505565b90503373ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff1614158015610b1057503373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff1614155b15610b47576040517f4ca8886700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026001600260008781526020019081526020016000206000015481548110610b7357610b72611fa4565b5b906000526020600020906007020160050160006101000a81548160ff02191690836003811115610ba657610ba5611a31565b5b0217905550826001600260008781526020019081526020016000206000015481548110610bd657610bd5611fa4565b5b9060005260206000209060070201600601819055507f4a837c520d9f368aaaea13ebb5a574227512de5e0ef1c6829f0cff5a18fef14e84604051610c1a91906120b9565b60405180910390a150505050565b6000610c3382611505565b90503373ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff1614158015610ca557503373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff1614155b15610cdc576040517f4ca8886700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80608001513414610d19576040517f9602d60700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006064600a60ff1634610d2d91906120d4565b610d379190612145565b905060008114610da95760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610da7573d6000803e3d6000fd5b505b60008134610db79190612176565b90503373ffffffffffffffffffffffffffffffffffffffff16836020015173ffffffffffffffffffffffffffffffffffffffff1603610e4057826040015173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610e3a573d6000803e3d6000fd5b50610e8c565b826020015173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610e8a573d6000803e3d6000fd5b505b6001600260008681526020019081526020016000206000015481548110610eb657610eb5611fa4565b5b90600052602060002090600702016000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600382016000610f2b919061187b565b60048201600090556005820160006101000a81549060ff02191690556006820160009055505060036001600260008781526020019081526020016000206000015481548110610f7d57610f7c611fa4565b5b906000526020600020906007020160050160006101000a81548160ff02191690836003811115610fb057610faf611a31565b5b02179055507f864ab0fdbebe5acbec63517700b9f4e0d9e6e952430476e55c9da20e56eb175384604051610fe491906120b9565b60405180910390a150505050565b806000810361102d576040517fb7d0949700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000845103611068576040517f68b3703600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036110ce576040517fd62e497b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008303611108576040517ff6d5173800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003600081548092919061111b90612002565b91905055506000611131338787876003546117bc565b905060006040518060e001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018681526020016000600381111561119e5761119d611a31565b5b815260200185815250905060018190806001815401808255809150506001900390600052602060002090600702016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030190816112829190612356565b506080820151816004015560a08201518160050160006101000a81548160ff021916908360038111156112b8576112b7611a31565b5b021790555060c082015181600601555050604051806040016040528060016112de610208565b6112e89190612176565b815260200160011515815250600260008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff0219169083151502179055509050507f3bedf7bdc9c1b6038d7e908abea9040f7de2f70dc0270a8de9413d06ed0eb7a58260405161136391906120b9565b60405180910390a150505050505050565b80600081036113af576040517fb7d0949700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006113ba84611505565b9050806040015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611425576040517f4ca8886700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001806002600087815260200190815260200160002060000154815481106114505761144f611fa4565b5b906000526020600020906007020160050160006101000a81548160ff0219169083600381111561148357611482611a31565b5b02179055508260016002600087815260200190815260200160002060000154815481106114b3576114b2611fa4565b5b9060005260206000209060070201600601819055507f903359345f2970df3da926dea9c27556b1fa2eceefca9e1078e1ec12c0b1b6b1846040516114f791906120b9565b60405180910390a150505050565b61150d6117fd565b6002600083815260200190815260200160002060010160009054906101000a900460ff16611567576040517f9cc59cb900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160026000858152602001908152602001600020600001548154811061159357611592611fa4565b5b906000526020600020905050602060ff16036115db576040517f9cc59cb900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160026000848152602001908152602001600020600001548154811061160557611604611fa4565b5b90600052602060002090600702016040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820180546116e490612079565b80601f016020809104026020016040519081016040528092919081815260200182805461171090612079565b801561175d5780601f106117325761010080835404028352916020019161175d565b820191906000526020600020905b81548152906001019060200180831161174057829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff16600381111561179557611794611a31565b5b60038111156117a7576117a6611a31565b5b81526020016006820154815250509050919050565b60008086868686866040516020016117d8959493929190612481565b6040516020818303038152906040529050808051906020012091505095945050505050565b6040518060e0016040528060008019168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600081526020016000600381111561186e5761186d611a31565b5b8152602001600081525090565b50805461188790612079565b6000825580601f1061189957506118b8565b601f0160209004906000526020600020908101906118b791906118bb565b5b50565b5b808211156118d45760008160009055506001016118bc565b5090565b6000819050919050565b6118eb816118d8565b82525050565b600060208201905061190660008301846118e2565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b61194b81611938565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061197c82611951565b9050919050565b61198c81611971565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156119cc5780820151818401526020810190506119b1565b60008484015250505050565b6000601f19601f8301169050919050565b60006119f482611992565b6119fe818561199d565b9350611a0e8185602086016119ae565b611a17816119d8565b840191505092915050565b611a2b816118d8565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110611a7157611a70611a31565b5b50565b6000819050611a8282611a60565b919050565b6000611a9282611a74565b9050919050565b611aa281611a87565b82525050565b600060e083016000830151611ac06000860182611942565b506020830151611ad36020860182611983565b506040830151611ae66040860182611983565b5060608301518482036060860152611afe82826119e9565b9150506080830151611b136080860182611a22565b5060a0830151611b2660a0860182611a99565b5060c0830151611b3960c0860182611a22565b508091505092915050565b6000611b508383611aa8565b905092915050565b6000602082019050919050565b6000611b708261190c565b611b7a8185611917565b935083602082028501611b8c85611928565b8060005b85811015611bc85784840389528151611ba98582611b44565b9450611bb483611b58565b925060208a01995050600181019050611b90565b50829750879550505050505092915050565b60006020820190508181036000830152611bf48184611b65565b905092915050565b6000604051905090565b600080fd5b600080fd5b611c1981611971565b8114611c2457600080fd5b50565b600081359050611c3681611c10565b92915050565b600060208284031215611c5257611c51611c06565b5b6000611c6084828501611c27565b91505092915050565b600060e083016000830151611c816000860182611942565b506020830151611c946020860182611983565b506040830151611ca76040860182611983565b5060608301518482036060860152611cbf82826119e9565b9150506080830151611cd46080860182611a22565b5060a0830151611ce760a0860182611a99565b5060c0830151611cfa60c0860182611a22565b508091505092915050565b60006020820190508181036000830152611d1f8184611c69565b905092915050565b611d3081611938565b8114611d3b57600080fd5b50565b600081359050611d4d81611d27565b92915050565b611d5c816118d8565b8114611d6757600080fd5b50565b600081359050611d7981611d53565b92915050565b60008060408385031215611d9657611d95611c06565b5b6000611da485828601611d3e565b9250506020611db585828601611d6a565b9150509250929050565b600060208284031215611dd557611dd4611c06565b5b6000611de384828501611d3e565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611e2e826119d8565b810181811067ffffffffffffffff82111715611e4d57611e4c611df6565b5b80604052505050565b6000611e60611bfc565b9050611e6c8282611e25565b919050565b600067ffffffffffffffff821115611e8c57611e8b611df6565b5b611e95826119d8565b9050602081019050919050565b82818337600083830152505050565b6000611ec4611ebf84611e71565b611e56565b905082815260208101848484011115611ee057611edf611df1565b5b611eeb848285611ea2565b509392505050565b600082601f830112611f0857611f07611dec565b5b8135611f18848260208601611eb1565b91505092915050565b60008060008060808587031215611f3b57611f3a611c06565b5b6000611f4987828801611c27565b945050602085013567ffffffffffffffff811115611f6a57611f69611c0b565b5b611f7687828801611ef3565b9350506040611f8787828801611d6a565b9250506060611f9887828801611d6a565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061200d826118d8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361203f5761203e611fd3565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061209157607f821691505b6020821081036120a4576120a361204a565b5b50919050565b6120b381611938565b82525050565b60006020820190506120ce60008301846120aa565b92915050565b60006120df826118d8565b91506120ea836118d8565b92508282026120f8816118d8565b9150828204841483151761210f5761210e611fd3565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612150826118d8565b915061215b836118d8565b92508261216b5761216a612116565b5b828204905092915050565b6000612181826118d8565b915061218c836118d8565b92508282039050818111156121a4576121a3611fd3565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261220c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826121cf565b61221686836121cf565b95508019841693508086168417925050509392505050565b6000819050919050565b600061225361224e612249846118d8565b61222e565b6118d8565b9050919050565b6000819050919050565b61226d83612238565b6122816122798261225a565b8484546121dc565b825550505050565b600090565b612296612289565b6122a1818484612264565b505050565b5b818110156122c5576122ba60008261228e565b6001810190506122a7565b5050565b601f82111561230a576122db816121aa565b6122e4846121bf565b810160208510156122f3578190505b6123076122ff856121bf565b8301826122a6565b50505b505050565b600082821c905092915050565b600061232d6000198460080261230f565b1980831691505092915050565b6000612346838361231c565b9150826002028217905092915050565b61235f82611992565b67ffffffffffffffff81111561237857612377611df6565b5b6123828254612079565b61238d8282856122c9565b600060209050601f8311600181146123c057600084156123ae578287015190505b6123b8858261233a565b865550612420565b601f1984166123ce866121aa565b60005b828110156123f6578489015182556001820191506020850194506020810190506123d1565b86831015612413578489015161240f601f89168261231c565b8355505b6001600288020188555050505b505050505050565b61243181611971565b82525050565b600082825260208201905092915050565b600061245382611992565b61245d8185612437565b935061246d8185602086016119ae565b612476816119d8565b840191505092915050565b600060a0820190506124966000830188612428565b6124a36020830187612428565b81810360408301526124b58186612448565b90506124c460608301856118e2565b6124d160808301846118e2565b969550505050505056fea264697066735822122017f8f0ceeccc20796fb4b796b7857f5c0ff2787d7fe62f3c0328fda9f0e0db8b64736f6c63430008110033";

type MarrySignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarrySignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MarrySign__factory extends ContractFactory {
  constructor(...args: MarrySignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<MarrySign> {
    return super.deploy(overrides || {}) as Promise<MarrySign>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MarrySign {
    return super.attach(address) as MarrySign;
  }
  override connect(signer: Signer): MarrySign__factory {
    return super.connect(signer) as MarrySign__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarrySignInterface {
    return new utils.Interface(_abi) as MarrySignInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MarrySign {
    return new Contract(address, _abi, signerOrProvider) as MarrySign;
  }
}
