/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MarrySign, MarrySignInterface } from "../MarrySign";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "AgreementNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "BobNotSpecified",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerIsNotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyContent",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTimestamp",
    type: "error",
  },
  {
    inputs: [],
    name: "MustPayExactFee",
    type: "error",
  },
  {
    inputs: [],
    name: "MustPayExactTerminationCost",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "AgreementAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "AgreementCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "AgreementRefused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "AgreementTerminated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "acceptedAt",
        type: "uint256",
      },
    ],
    name: "acceptAgreement",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bob",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "content",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "terminationCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
    ],
    name: "createAgreement",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAcceptedAgreementCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAcceptedAgreements",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "alice",
            type: "address",
          },
          {
            internalType: "address",
            name: "bob",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "content",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "terminationCost",
            type: "uint256",
          },
          {
            internalType: "enum MarrySign.AgreementState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct MarrySign.Agreement[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "getAgreement",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "alice",
            type: "address",
          },
          {
            internalType: "address",
            name: "bob",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "content",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "terminationCost",
            type: "uint256",
          },
          {
            internalType: "enum MarrySign.AgreementState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct MarrySign.Agreement",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "partnerAddress",
        type: "address",
      },
    ],
    name: "getAgreementByAddress",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "alice",
            type: "address",
          },
          {
            internalType: "address",
            name: "bob",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "content",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "terminationCost",
            type: "uint256",
          },
          {
            internalType: "enum MarrySign.AgreementState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct MarrySign.Agreement",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAgreementCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pageNum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_resultsPerPage",
        type: "uint256",
      },
    ],
    name: "getPaginatedAgreements",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "alice",
            type: "address",
          },
          {
            internalType: "address",
            name: "bob",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "content",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "terminationCost",
            type: "uint256",
          },
          {
            internalType: "enum MarrySign.AgreementState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct MarrySign.Agreement[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "refusedAt",
        type: "uint256",
      },
    ],
    name: "refuseAgreement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "terminateAgreement",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000600155336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612af6806100586000396000f3fe6080604052600436106100c15760003560e01c806396e8bc231161007f578063ced72f8711610059578063ced72f8714610225578063e6dc3d1b14610250578063f42eb7651461026c578063f7d0c196146102a9576100c1565b806396e8bc23146101c4578063bb46fb35146101ed578063c9d51dd014610209576100c1565b80628bed3e146100c65780632e22d36c146100f15780633ccfd60b1461011c5780634c649eac1461013357806369fe0e2d1461015e57806391a5caaf14610187575b600080fd5b3480156100d257600080fd5b506100db6102e6565b6040516100e89190611ec9565b60405180910390f35b3480156100fd57600080fd5b506101066102f3565b6040516101139190611ec9565b60405180910390f35b34801561012857600080fd5b50610131610394565b005b34801561013f57600080fd5b50610148610482565b60405161015591906121b2565b60405180910390f35b34801561016a57600080fd5b5061018560048036038101906101809190612214565b610767565b005b34801561019357600080fd5b506101ae60048036038101906101a9919061226d565b6107f6565b6040516101bb9190612336565b60405180910390f35b3480156101d057600080fd5b506101eb60048036038101906101e69190612384565b610bde565b005b610207600480360381019061020291906123c4565b610dad565b005b610223600480360381019061021e9190612526565b6110e2565b005b34801561023157600080fd5b5061023a6114d9565b6040516102479190611ec9565b60405180910390f35b61026a60048036038101906102659190612384565b6114e3565b005b34801561027857600080fd5b50610293600480360381019061028e91906123c4565b611724565b6040516102a09190612336565b60405180910390f35b3480156102b557600080fd5b506102d060048036038101906102cb91906125a9565b6119db565b6040516102dd91906121b2565b60405180910390f35b6000600280549050905090565b6000806000905060005b6103056102e6565b81101561038c57600160038111156103205761031f612009565b5b60028281548110610334576103336125e9565b5b906000526020600020906007020160050160009054906101000a900460ff16600381111561036557610364612009565b5b0361037957818061037590612647565b9250505b808061038490612647565b9150506102fd565b508091505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610419576040517f6db2465f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561047f573d6000803e3d6000fd5b50565b6060600061048e6102f3565b905060008167ffffffffffffffff8111156104ac576104ab6123fb565b5b6040519080825280602002602001820160405280156104e557816020015b6104d2611dd5565b8152602001906001900390816104ca5790505b5090506000805b6104f46102e6565b81101561075d576001600381111561050f5761050e612009565b5b60028281548110610523576105226125e9565b5b906000526020600020906007020160050160009054906101000a900460ff16600381111561055457610553612009565b5b0361074a576002818154811061056d5761056c6125e9565b5b90600052602060002090600702016040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201805461064c906126be565b80601f0160208091040260200160405190810160405280929190818152602001828054610678906126be565b80156106c55780601f1061069a576101008083540402835291602001916106c5565b820191906000526020600020905b8154815290600101906020018083116106a857829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff1660038111156106fd576106fc612009565b5b600381111561070f5761070e612009565b5b81526020016006820154815250508383815181106107305761072f6125e9565b5b6020026020010181905250818061074690612647565b9250505b808061075590612647565b9150506104ec565b5081935050505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107ec576040517f6db2465f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060018190555050565b6107fe611dd5565b60005b6108096102e6565b811015610ba6576000600381111561082457610823612009565b5b60028281548110610838576108376125e9565b5b906000526020600020906007020160050160009054906101000a900460ff16600381111561086957610868612009565b5b141580156108ce57506001600381111561088657610885612009565b5b6002828154811061089a576108996125e9565b5b906000526020600020906007020160050160009054906101000a900460ff1660038111156108cb576108ca612009565b5b14155b610b93578273ffffffffffffffffffffffffffffffffffffffff16600282815481106108fd576108fc6125e9565b5b906000526020600020906007020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806109c157508273ffffffffffffffffffffffffffffffffffffffff1660028281548110610977576109766125e9565b5b906000526020600020906007020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15610b9257600281815481106109da576109d96125e9565b5b90600052602060002090600702016040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382018054610ab9906126be565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae5906126be565b8015610b325780601f10610b0757610100808354040283529160200191610b32565b820191906000526020600020905b815481529060010190602001808311610b1557829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff166003811115610b6a57610b69612009565b5b6003811115610b7c57610b7b612009565b5b8152602001600682015481525050915050610bd9565b5b8080610b9e90612647565b915050610801565b506040517f9cc59cb900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b8060008103610c19576040517fb7d0949700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610c2484611724565b90503373ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff1614158015610c9657503373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff1614155b15610ccd576040517f4ca8886700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280600360008781526020019081526020016000206000015481548110610cf857610cf76125e9565b5b906000526020600020906007020160050160006101000a81548160ff02191690836003811115610d2b57610d2a612009565b5b0217905550826002600360008781526020019081526020016000206000015481548110610d5b57610d5a6125e9565b5b9060005260206000209060070201600601819055507f4a837c520d9f368aaaea13ebb5a574227512de5e0ef1c6829f0cff5a18fef14e84604051610d9f91906126fe565b60405180910390a150505050565b6000610db882611724565b90503373ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff1614158015610e2a57503373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff1614155b15610e61576040517f4ca8886700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80608001513414610e9e576040517f9602d60700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000816080015114610f7e573373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff1603610f3157806040015173ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610f2b573d6000803e3d6000fd5b50610f7d565b806020015173ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610f7b573d6000803e3d6000fd5b505b5b6002600360008481526020019081526020016000206000015481548110610fa857610fa76125e9565b5b90600052602060002090600702016000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600061101d9190611e53565b60048201600090556005820160006101000a81549060ff0219169055600682016000905550506003600260036000858152602001908152602001600020600001548154811061106f5761106e6125e9565b5b906000526020600020906007020160050160006101000a81548160ff021916908360038111156110a2576110a1612009565b5b02179055507f864ab0fdbebe5acbec63517700b9f4e0d9e6e952430476e55c9da20e56eb1753826040516110d691906126fe565b60405180910390a15050565b806000810361111d576040517fb7d0949700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000845103611158576040517f68b3703600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036111be576040517fd62e497b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015434146111f9576040517fd0ae82f300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001541461126d5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f1935050505015801561126b573d6000803e3d6000fd5b505b6004600081548092919061128090612647565b9190505550600061129633878787600454611d94565b905060006040518060e001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018681526020016000600381111561130357611302612009565b5b815260200185815250905060028190806001815401808255809150506001900390600052602060002090600702016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030190816113e791906128c5565b506080820151816004015560a08201518160050160006101000a81548160ff0219169083600381111561141d5761141c612009565b5b021790555060c082015181600601555050604051806040016040528060016114436102e6565b61144d9190612997565b815260200160011515815250600360008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff0219169083151502179055509050507f3bedf7bdc9c1b6038d7e908abea9040f7de2f70dc0270a8de9413d06ed0eb7a5826040516114c891906126fe565b60405180910390a150505050505050565b6000600154905090565b806000810361151e576040517fb7d0949700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061152984611724565b9050806040015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611594576040517f4ca8886700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60015434146115cf576040517fd0ae82f300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600154146116435760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f19350505050158015611641573d6000803e3d6000fd5b505b6001600260036000878152602001908152602001600020600001548154811061166f5761166e6125e9565b5b906000526020600020906007020160050160006101000a81548160ff021916908360038111156116a2576116a1612009565b5b02179055508260026003600087815260200190815260200160002060000154815481106116d2576116d16125e9565b5b9060005260206000209060070201600601819055507f903359345f2970df3da926dea9c27556b1fa2eceefca9e1078e1ec12c0b1b6b18460405161171691906126fe565b60405180910390a150505050565b61172c611dd5565b6003600083815260200190815260200160002060010160009054906101000a900460ff16611786576040517f9cc59cb900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060026003600085815260200190815260200160002060000154815481106117b2576117b16125e9565b5b906000526020600020905050602060ff16036117fa576040517f9cc59cb900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600360008481526020019081526020016000206000015481548110611824576118236125e9565b5b90600052602060002090600702016040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382018054611903906126be565b80601f016020809104026020016040519081016040528092919081815260200182805461192f906126be565b801561197c5780601f106119515761010080835404028352916020019161197c565b820191906000526020600020905b81548152906001019060200180831161195f57829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff1660038111156119b4576119b3612009565b5b60038111156119c6576119c5612009565b5b81526020016006820154815250509050919050565b6060600060028054905014806119f15750600083145b806119fc5750600082145b15611a5d57600067ffffffffffffffff811115611a1c57611a1b6123fb565b5b604051908082528060200260200182016040528015611a5557816020015b611a42611dd5565b815260200190600190039081611a3a5790505b509050611d8e565b6000828484611a6c91906129cb565b611a769190612997565b90506000811080611a9757506001600280549050611a949190612997565b81115b15611af957600067ffffffffffffffff811115611ab757611ab66123fb565b5b604051908082528060200260200182016040528015611af057816020015b611add611dd5565b815260200190600190039081611ad55790505b50915050611d8e565b60008367ffffffffffffffff811115611b1557611b146123fb565b5b604051908082528060200260200182016040528015611b4e57816020015b611b3b611dd5565b815260200190600190039081611b335790505b50905060005b8585611b6091906129cb565b831015611d8757600280549050831015611d5b5760028381548110611b8857611b876125e9565b5b90600052602060002090600702016040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382018054611c67906126be565b80601f0160208091040260200160405190810160405280929190818152602001828054611c93906126be565b8015611ce05780601f10611cb557610100808354040283529160200191611ce0565b820191906000526020600020905b815481529060010190602001808311611cc357829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff166003811115611d1857611d17612009565b5b6003811115611d2a57611d29612009565b5b8152602001600682015481525050828281518110611d4b57611d4a6125e9565b5b6020026020010181905250611d66565b819350505050611d8e565b8080611d7190612647565b9150508280611d7f90612647565b935050611b54565b8193505050505b92915050565b6000808686868686604051602001611db0959493929190612a66565b6040516020818303038152906040529050808051906020012091505095945050505050565b6040518060e0016040528060008019168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016000815260200160006003811115611e4657611e45612009565b5b8152602001600081525090565b508054611e5f906126be565b6000825580601f10611e715750611e90565b601f016020900490600052602060002090810190611e8f9190611e93565b5b50565b5b80821115611eac576000816000905550600101611e94565b5090565b6000819050919050565b611ec381611eb0565b82525050565b6000602082019050611ede6000830184611eba565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b611f2381611f10565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f5482611f29565b9050919050565b611f6481611f49565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611fa4578082015181840152602081019050611f89565b60008484015250505050565b6000601f19601f8301169050919050565b6000611fcc82611f6a565b611fd68185611f75565b9350611fe6818560208601611f86565b611fef81611fb0565b840191505092915050565b61200381611eb0565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061204957612048612009565b5b50565b600081905061205a82612038565b919050565b600061206a8261204c565b9050919050565b61207a8161205f565b82525050565b600060e0830160008301516120986000860182611f1a565b5060208301516120ab6020860182611f5b565b5060408301516120be6040860182611f5b565b50606083015184820360608601526120d68282611fc1565b91505060808301516120eb6080860182611ffa565b5060a08301516120fe60a0860182612071565b5060c083015161211160c0860182611ffa565b508091505092915050565b60006121288383612080565b905092915050565b6000602082019050919050565b600061214882611ee4565b6121528185611eef565b93508360208202850161216485611f00565b8060005b858110156121a05784840389528151612181858261211c565b945061218c83612130565b925060208a01995050600181019050612168565b50829750879550505050505092915050565b600060208201905081810360008301526121cc818461213d565b905092915050565b6000604051905090565b600080fd5b600080fd5b6121f181611eb0565b81146121fc57600080fd5b50565b60008135905061220e816121e8565b92915050565b60006020828403121561222a576122296121de565b5b6000612238848285016121ff565b91505092915050565b61224a81611f49565b811461225557600080fd5b50565b60008135905061226781612241565b92915050565b600060208284031215612283576122826121de565b5b600061229184828501612258565b91505092915050565b600060e0830160008301516122b26000860182611f1a565b5060208301516122c56020860182611f5b565b5060408301516122d86040860182611f5b565b50606083015184820360608601526122f08282611fc1565b91505060808301516123056080860182611ffa565b5060a083015161231860a0860182612071565b5060c083015161232b60c0860182611ffa565b508091505092915050565b60006020820190508181036000830152612350818461229a565b905092915050565b61236181611f10565b811461236c57600080fd5b50565b60008135905061237e81612358565b92915050565b6000806040838503121561239b5761239a6121de565b5b60006123a98582860161236f565b92505060206123ba858286016121ff565b9150509250929050565b6000602082840312156123da576123d96121de565b5b60006123e88482850161236f565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61243382611fb0565b810181811067ffffffffffffffff82111715612452576124516123fb565b5b80604052505050565b60006124656121d4565b9050612471828261242a565b919050565b600067ffffffffffffffff821115612491576124906123fb565b5b61249a82611fb0565b9050602081019050919050565b82818337600083830152505050565b60006124c96124c484612476565b61245b565b9050828152602081018484840111156124e5576124e46123f6565b5b6124f08482856124a7565b509392505050565b600082601f83011261250d5761250c6123f1565b5b813561251d8482602086016124b6565b91505092915050565b600080600080608085870312156125405761253f6121de565b5b600061254e87828801612258565b945050602085013567ffffffffffffffff81111561256f5761256e6121e3565b5b61257b878288016124f8565b935050604061258c878288016121ff565b925050606061259d878288016121ff565b91505092959194509250565b600080604083850312156125c0576125bf6121de565b5b60006125ce858286016121ff565b92505060206125df858286016121ff565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061265282611eb0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361268457612683612618565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806126d657607f821691505b6020821081036126e9576126e861268f565b5b50919050565b6126f881611f10565b82525050565b600060208201905061271360008301846126ef565b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261277b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261273e565b612785868361273e565b95508019841693508086168417925050509392505050565b6000819050919050565b60006127c26127bd6127b884611eb0565b61279d565b611eb0565b9050919050565b6000819050919050565b6127dc836127a7565b6127f06127e8826127c9565b84845461274b565b825550505050565b600090565b6128056127f8565b6128108184846127d3565b505050565b5b81811015612834576128296000826127fd565b600181019050612816565b5050565b601f8211156128795761284a81612719565b6128538461272e565b81016020851015612862578190505b61287661286e8561272e565b830182612815565b50505b505050565b600082821c905092915050565b600061289c6000198460080261287e565b1980831691505092915050565b60006128b5838361288b565b9150826002028217905092915050565b6128ce82611f6a565b67ffffffffffffffff8111156128e7576128e66123fb565b5b6128f182546126be565b6128fc828285612838565b600060209050601f83116001811461292f576000841561291d578287015190505b61292785826128a9565b86555061298f565b601f19841661293d86612719565b60005b8281101561296557848901518255600182019150602085019450602081019050612940565b86831015612982578489015161297e601f89168261288b565b8355505b6001600288020188555050505b505050505050565b60006129a282611eb0565b91506129ad83611eb0565b92508282039050818111156129c5576129c4612618565b5b92915050565b60006129d682611eb0565b91506129e183611eb0565b92508282026129ef81611eb0565b91508282048414831517612a0657612a05612618565b5b5092915050565b612a1681611f49565b82525050565b600082825260208201905092915050565b6000612a3882611f6a565b612a428185612a1c565b9350612a52818560208601611f86565b612a5b81611fb0565b840191505092915050565b600060a082019050612a7b6000830188612a0d565b612a886020830187612a0d565b8181036040830152612a9a8186612a2d565b9050612aa96060830185611eba565b612ab66080830184611eba565b969550505050505056fea26469706673582212206e26c60958b876b874d9efa96fa2276ed6083a2d10fea59702b3f9eab301565f64736f6c63430008110033";

type MarrySignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarrySignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MarrySign__factory extends ContractFactory {
  constructor(...args: MarrySignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<MarrySign> {
    return super.deploy(overrides || {}) as Promise<MarrySign>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MarrySign {
    return super.attach(address) as MarrySign;
  }
  override connect(signer: Signer): MarrySign__factory {
    return super.connect(signer) as MarrySign__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarrySignInterface {
    return new utils.Interface(_abi) as MarrySignInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MarrySign {
    return new Contract(address, _abi, signerOrProvider) as MarrySign;
  }
}
